<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Processing Model for Docbook v5</title>
                <title type="short">Docbook v5</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="docbook" ns="http://docbook.org/ns/docbook">
                <elementSpec ident="article">
                    <model behaviour="document"/>
                </elementSpec>
                <elementSpec ident="info">
                    <model predicate="not(parent::article|parent::book)" behaviour="block"/>
                    <model output="epub" behaviour="block">
                        <param name="content" value="(title, author)"/>
                    </model>
                    <modelSequence predicate="$parameters?header='short'">
                        <model behaviour="heading">
                            <param name="content" value="title"/>
                            <param name="level" value="5"/>
                        </model>
                        <model predicate="author" behaviour="block">
                            <param name="content" value="author"/>
                        </model>
                    </modelSequence>
                    <model behaviour="metadata"/>
                </elementSpec>
                <elementSpec ident="author">
                    <model predicate="preceding-sibling::author" behaviour="inline">
                        <param name="content" value="(', ', personname, affiliation)"/>
                    </model>
                    <model behaviour="inline">
                        <param name="content" value="(personname, affiliation)"/>
                    </model>
                </elementSpec>
                <elementSpec ident="personname">
                    <model behaviour="inline">
                        <param name="content" value="(firstname, ' ', surname)"/>
                    </model>
                </elementSpec>
                <elementSpec ident="affiliation">
                    <model behaviour="inline">
                        <param name="content" value="(', ', .)"/>
                    </model>
                </elementSpec>
                <elementSpec ident="title">
                    <model predicate="parent::note" behaviour="inline"/>
                    <model predicate="parent::info and $parameters?header='short'" behaviour="link">
                        <param name="link" value="$parameters?doc"/>
                    </model>
                    <model behaviour="heading" cssClass="title">
                        <param name="level" value="count(ancestor::section)"/>
                    </model>
                </elementSpec>
                <elementSpec ident="section">
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec ident="para">
                    <model behaviour="paragraph"/>
                </elementSpec>
                <elementSpec ident="emphasis">
                    <model predicate="@role='bold'" behaviour="inline">
                        <outputRendition>
                            font-weight: bold;
                        </outputRendition>
                    </model>
                    <model behaviour="inline">
                        <outputRendition>
                            font-style: italic;
                        </outputRendition>
                    </model>
                </elementSpec>
                <elementSpec ident="code">
                    <model behaviour="inline" cssClass="code"/>
                </elementSpec>
                <elementSpec ident="figure">
                    <model predicate="title|info/title" behaviour="figure" cssClass="figure">
                        <param name="title" value="title/node()|info/title/node()"/>
                        <param name="content" value="*[not(self::title|self::info)]"/>
                    </model>
                    <model behaviour="figure"/>
                </elementSpec>
                <elementSpec ident="informalfigure">
                    <model predicate="caption" behaviour="figure" cssClass="figure">
                        <param name="title" value="caption/node()"/>
                        <param name="content" value="*[not(self::caption)]"/>
                    </model>
                    <model behaviour="figure" cssClass="figure"/>
                </elementSpec>
                <elementSpec ident="imagedata">
                    <model behaviour="graphic" cssClass="img-responsive">
                        <param name="url" value="@fileref"/>
                    </model>
                </elementSpec>
                <elementSpec ident="itemizedlist">
                    <model behaviour="list">
                        <param name="content" value="listitem"/>
                    </model>
                </elementSpec>
                <elementSpec ident="listitem">
                    <model behaviour="listItem"/>
                </elementSpec>
                <elementSpec ident="orderedlist">
                    <model behaviour="list">
                        <param name="type" value="'ordered'"/>
                        <param name="content" value="listitem"/>
                    </model>
                </elementSpec>
                <elementSpec ident="procedure">
                    <model behaviour="list">
                        <param name="type" value="'ordered'"/>
                        <param name="content" value="step"/>
                    </model>
                </elementSpec>
                <elementSpec ident="step">
                    <model behaviour="listItem"/>
                </elementSpec>
                <elementSpec ident="variablelist">
                    <model behaviour="definitionList">
                        <param name="content" value="varlistentry"/>
                    </model>
                </elementSpec>
                <elementSpec ident="varlistentry">
                    <modelSequence>
                        <model behaviour="definitionTerm" cssClass="term">
                            <param name="content" value="term/node()"/>
                        </model>
                        <model behaviour="definitionDef" cssClass="varlistentry">
                            <param name="content" value="listitem/node()"/>
                        </model>
                    </modelSequence>
                </elementSpec>
                <elementSpec ident="table" mode="add">
                    <modelSequence predicate="title">
                        <model behaviour="heading">
                            <param name="content" value="title"/>
                        </model>
                        <model behaviour="table">
                            <param name="content" value=".//tr"/>
                        </model>
                    </modelSequence>
                    <model behaviour="table" cssClass="table">
                        <param name="content" value=".//tr"/>
                    </model>
                </elementSpec>
                <elementSpec ident="informaltable" mode="add">
                    <model behaviour="table" cssClass="table">
                        <param name="content" value=".//tr"/>
                    </model>
                </elementSpec>
                <elementSpec ident="tr">
                    <model behaviour="row"/>
                </elementSpec>
                <elementSpec ident="td">
                    <model predicate="parent::tr/parent::thead" behaviour="cell">
                        <outputRendition>



                            font-weight: bold;
                            text-align: left;



                        </outputRendition>
                    </model>
                    <model behaviour="cell"/>
                </elementSpec>
                <elementSpec ident="programlisting">
                    <modelGrp output="web">
                        <model predicate="parent::cell|parent::para|parent::ab" behaviour="inline" cssClass="code"/>
                        <model behaviour="code">
                            <param name="lang" value="@language"/>
                        </model>
                    </modelGrp>
                    <model behaviour="block" cssClass="programlisting"/>
                </elementSpec>
                <elementSpec ident="synopsis">
                    <model output="print" behaviour="block" cssClass="programlisting"/>
                    <model behaviour="code">
                        <param name="lang" value="@language"/>
                    </model>
                </elementSpec>
                <elementSpec ident="example">
                    <model behaviour="figure">
                        <param name="title" value="info/title/node()|title/node()"/>
                        <param name="content" value="*[not(self::title|self::info)]"/>
                    </model>
                </elementSpec>
                <elementSpec ident="function">
                    <model behaviour="inline" cssClass="code"/>
                </elementSpec>
                <elementSpec ident="command">
                    <model behaviour="inline" cssClass="code"/>
                </elementSpec>
                <elementSpec ident="parameter">
                    <model behaviour="inline" cssClass="code"/>
                </elementSpec>
                <elementSpec ident="filename">
                    <model behaviour="inline" cssClass="code"/>
                </elementSpec>
                <elementSpec ident="note">
                    <model behaviour="card" cssClass="tp-card">
                        <param name="title" value="title"/>
                        <param name="content" value="*[not(self::title)]"/>
                    </model>
                </elementSpec>
                <elementSpec ident="tag">
                    <model behaviour="inline" cssClass="code">
                        <outputRendition scope="before">
                            content: '&lt;';
                        </outputRendition>
                        <outputRendition scope="after">
                            content: '&gt;';
                        </outputRendition>
                    </model>
                </elementSpec>
                <elementSpec ident="link">
                    <model predicate="@linkend" behaviour="link">
                        <param name="link" value="concat('?odd=', request:get-parameter('odd', ()), '&amp;amp;view=',                             request:get-parameter('view', ()), '&amp;amp;id=', @linkend)"/>
                    </model>
                    <model behaviour="link">
                        <param name="link" value="@xlink:href"/>
                    </model>
                </elementSpec>
                <elementSpec ident="*">
                    <model behaviour="inline"/>
                </elementSpec>
            <elementSpec ident="guibutton" mode="add">
                    <model behaviour="inline">
                        <outputRendition>


                            color: #fff;
background-color: #909090;
padding-left: 4px;
padding-right: 4px;
border: 1px solid #707070;


                        </outputRendition>
                    </model>
                </elementSpec>
                <elementSpec ident="guilabel" mode="add">
                    <model behaviour="inline">
                        <outputRendition>
                            font-style: italic;
                        </outputRendition>
                    </model>
                </elementSpec>
            <elementSpec ident="videodata" mode="add">
                    <model behaviour="iframe">
                        <param name="width" value="@width"/>
                        <param name="height" value="@depth"/>
                        <param name="src" value="@fileref"/>
                    </model>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>
